backend/src/main/scala/backends/graphviz/GraphvizCallGraph.scala
----------------------------------------------------------------

Summary:
Schema => SemanticDB v4
Uri => backend/src/main/scala/backends/graphviz/GraphvizCallGraph.scala
Text => empty
Language => Scala
Symbols => 23 entries
Occurrences => 179 entries
Synthetics => 11 entries

Symbols:
backends/graphviz/GraphvizCallGraph$package. => final package object graphviz extends Object { self: graphviz.type => +2 decls }
  Object => java/lang/Object#
  graphviz => backends/graphviz/GraphvizCallGraph$package.
backends/graphviz/GraphvizCallGraph$package.graphVizCallGraphExample(). => @main method graphVizCallGraphExample=> File
  main => scala/main#
  File => java/io/File#
backends/graphviz/GraphvizCallGraph. => final object GraphvizCallGraph extends Object { self: GraphvizCallGraph.type => +4 decls }
  Object => java/lang/Object#
  GraphvizCallGraph => backends/graphviz/GraphvizCallGraph.
backends/graphviz/GraphvizCallGraph.toGraph(). => method toGraph(name: String, diagram: CallGraph): Graph
  name => backends/graphviz/GraphvizCallGraph.toGraph().(name)
  String => scala/Predef.String#
  diagram => backends/graphviz/GraphvizCallGraph.toGraph().(diagram)
  CallGraph => callGraph/CallGraph#
  Graph => guru/nidi/graphviz/model/Graph#
backends/graphviz/GraphvizCallGraph.toGraph().(diagram) => param diagram: CallGraph
  CallGraph => callGraph/CallGraph#
backends/graphviz/GraphvizCallGraph.toGraph().(name) => param name: String
  String => scala/Predef.String#
backends/graphviz/GraphvizCallGraph.toNode(). => private[this] method toNode(box: Method): Node
  box => backends/graphviz/GraphvizCallGraph.toNode().(box)
  Method => models/Method#
  Node => guru/nidi/graphviz/model/Node#
backends/graphviz/GraphvizCallGraph.toNode().(box) => param box: Method
  Method => models/Method#
backends/graphviz/GraphvizCallGraph.toSubgraph(). => method toSubgraph(ns: Type): Tuple2[Graph, Map[Method, Node]]
  ns => backends/graphviz/GraphvizCallGraph.toSubgraph().(ns)
  Type => models/Type#
  Tuple2 => scala/Tuple2#
  Graph => guru/nidi/graphviz/model/Graph#
  Map => scala/collection/immutable/Map#
  Method => models/Method#
  Node => guru/nidi/graphviz/model/Node#
backends/graphviz/GraphvizCallGraph.toSubgraph().(ns) => param ns: Type
  Type => models/Type#
backends/graphviz/graphVizCallGraphExample# => final class graphVizCallGraphExample extends Object { self: graphVizCallGraphExample => +2 decls }
  Object => java/lang/Object#
  graphVizCallGraphExample => backends/graphviz/graphVizCallGraphExample#
local0 => param ns: Type
  Type => models/Type#
local1 => val local subGraphs: List[Graph]
  List => scala/collection/immutable/List#
  Graph => guru/nidi/graphviz/model/Graph#
local2 => val local nodes: List[Map[Method, Node]]
  List => scala/collection/immutable/List#
  Map => scala/collection/immutable/Map#
  Method => models/Method#
  Node => guru/nidi/graphviz/model/Node#
local3 => val local combinedNodes: Map[Method, Node]
  Map => scala/collection/immutable/Map#
  Method => models/Method#
  Node => guru/nidi/graphviz/model/Node#
local4 => param x$1: <?>
local5 => val local source: <?>
local6 => val local target: <?>
local7 => val local links: List[Node]
  List => scala/collection/immutable/List#
  Node => guru/nidi/graphviz/model/Node#
local8 => param m: <?>
local9 => val local methods: Map[<?>, Node]
  Map => scala/collection/immutable/Map#
  Node => guru/nidi/graphviz/model/Node#
local10 => val local g: Graph
  Graph => guru/nidi/graphviz/model/Graph#
local11 => val local g: Graph
  Graph => guru/nidi/graphviz/model/Graph#

Occurrences:
[0:8..0:16) => backends/
[0:17..0:25) <= backends/graphviz/
[2:7..2:15) => backends/
[2:16..2:24) => backends/graphviz/
[2:25..2:42) => backends/graphviz/GraphvizCallGraph.
[2:43..2:50) => backends/graphviz/GraphvizCallGraph.toGraph().
[3:7..3:16) => callGraph/
[3:18..3:27) => callGraph/CallGraph#
[3:18..3:27) => callGraph/CallGraph.
[3:29..3:46) => callGraph/CallGraphExamples.
[4:7..4:11) => guru/
[4:12..4:16) => guru/nidi/
[4:17..4:25) => guru/nidi/graphviz/
[4:26..4:35) => guru/nidi/graphviz/attribute/
[4:36..4:41) => guru/nidi/graphviz/attribute/Label#
[5:7..5:13) => models/
[5:15..5:21) => models/Method#
[5:15..5:21) => models/Method.
[5:23..5:27) => models/Type#
[5:23..5:27) => models/Type.
[6:7..6:16) => scalatags/
[6:17..6:21) => scalatags/Text.
[7:7..7:11) => guru/
[7:12..7:16) => guru/nidi/
[7:17..7:25) => guru/nidi/graphviz/
[7:26..7:35) => guru/nidi/graphviz/attribute/
[7:36..7:40) => guru/nidi/graphviz/attribute/Rank#
[7:41..7:48) => guru/nidi/graphviz/attribute/Rank#RankDir#
[8:7..8:11) => guru/
[8:12..8:16) => guru/nidi/
[8:17..8:25) => guru/nidi/graphviz/
[8:26..8:31) => guru/nidi/graphviz/model/
[8:33..8:38) => guru/nidi/graphviz/model/Graph#
[8:40..8:44) => guru/nidi/graphviz/model/Link#
[8:46..8:56) => guru/nidi/graphviz/model/LinkSource#
[8:58..8:68) => guru/nidi/graphviz/model/LinkTarget#
[8:70..8:74) => guru/nidi/graphviz/model/Node#
[8:76..8:84) => guru/nidi/graphviz/model/PortNode#
[9:7..9:11) => guru/
[9:12..9:16) => guru/nidi/
[9:17..9:25) => guru/nidi/graphviz/
[9:26..9:31) => guru/nidi/graphviz/model/
[9:32..9:39) => guru/nidi/graphviz/model/Factory#
[10:7..10:11) => guru/
[10:12..10:16) => guru/nidi/
[10:17..10:25) => guru/nidi/graphviz/
[10:26..10:35) => guru/nidi/graphviz/attribute/
[10:36..10:43) => guru/nidi/graphviz/attribute/Records#
[11:7..11:11) => guru/
[11:12..11:16) => guru/nidi/
[11:17..11:25) => guru/nidi/graphviz/
[11:26..11:35) => guru/nidi/graphviz/attribute/
[11:37..11:42) => guru/nidi/graphviz/attribute/Arrow#
[11:44..11:49) => guru/nidi/graphviz/attribute/Color#
[11:51..11:55) => guru/nidi/graphviz/attribute/Rank#
[11:57..11:64) => guru/nidi/graphviz/attribute/Records#
[11:66..11:71) => guru/nidi/graphviz/attribute/Shape#
[11:73..11:78) => guru/nidi/graphviz/attribute/Style#
[12:7..12:11) => guru/
[12:12..12:16) => guru/nidi/
[12:17..12:25) => guru/nidi/graphviz/
[12:26..12:32) => guru/nidi/graphviz/engine/
[12:33..12:39) => guru/nidi/graphviz/engine/Format#
[13:7..13:11) => guru/
[13:12..13:16) => guru/nidi/
[13:17..13:25) => guru/nidi/graphviz/
[13:26..13:32) => guru/nidi/graphviz/engine/
[13:33..13:41) => guru/nidi/graphviz/engine/Graphviz#
[15:7..15:11) => java/
[15:12..15:14) => java/io/
[15:15..15:19) => java/io/File#
[17:7..17:24) <= backends/graphviz/GraphvizCallGraph.
[19:6..19:13) <= backends/graphviz/GraphvizCallGraph.toGraph().
[19:14..19:18) <= backends/graphviz/GraphvizCallGraph.toGraph().(name)
[19:20..19:26) => scala/Predef.String#
[19:28..19:35) <= backends/graphviz/GraphvizCallGraph.toGraph().(diagram)
[19:37..19:46) => callGraph/CallGraph#
[19:49..19:54) => guru/nidi/graphviz/model/Graph#
[20:9..20:18) <= local1
[20:20..20:25) <= local2
[21:6..21:13) => backends/graphviz/GraphvizCallGraph.toGraph().(diagram)
[21:14..21:25) => callGraph/CallGraph#namesSpaces.
[22:9..22:12) => scala/collection/immutable/List#map().
[22:13..22:23) => backends/graphviz/GraphvizCallGraph.toSubgraph().
[23:9..23:14) => scala/collection/StrictOptimizedIterableOps#unzip().
[25:8..25:21) <= local3
[25:23..25:26) => scala/Predef.Map#
[25:27..25:33) => models/Method#
[25:35..25:39) => guru/nidi/graphviz/model/Node#
[26:6..26:11) => local2
[26:12..26:20) => scala/collection/LinearSeqOps#foldLeft().
[26:21..26:24) => scala/Predef.Map.
[26:25..26:30) => scala/collection/immutable/Map.empty().
[26:34..26:36) => scala/collection/MapOps#`++`().
[28:8..28:13) <= local7
[29:11..29:17) <= local5
[29:19..29:25) <= local6
[29:30..29:37) => backends/graphviz/GraphvizCallGraph.toGraph().(diagram)
[29:38..29:43) => callGraph/CallGraph#pairs.
[30:8..30:21) => local3
[30:22..30:28) => local5
[30:30..30:34) => guru/nidi/graphviz/model/Node#link().
[30:35..30:37) => guru/nidi/graphviz/model/Factory#to().
[30:38..30:51) => local3
[30:52..30:58) => local6
[32:4..32:9) => guru/nidi/graphviz/model/Factory#graph(+1).
[32:10..32:14) => backends/graphviz/GraphvizCallGraph.toGraph().(name)
[33:7..33:15) => guru/nidi/graphviz/model/Graph#directed().
[34:7..34:15) => guru/nidi/graphviz/model/Graph#nodeAttr().
[34:16..34:22) => guru/nidi/graphviz/attribute/Attributed#with(+2).
[34:23..34:28) => guru/nidi/graphviz/attribute/Style#
[34:29..34:35) => guru/nidi/graphviz/attribute/Style#FILLED.
[34:37..34:42) => guru/nidi/graphviz/attribute/Shape#
[34:43..34:47) => guru/nidi/graphviz/attribute/Shape#RECT.
[34:49..34:54) => guru/nidi/graphviz/attribute/Color#
[34:55..34:58) => guru/nidi/graphviz/attribute/Color#rgb().
[34:70..34:74) => guru/nidi/graphviz/attribute/Color#fill().
[35:7..35:13) => guru/nidi/graphviz/model/Graph#with().
[35:14..35:23) => local1
[36:7..36:13) => guru/nidi/graphviz/model/Graph#with().
[36:14..36:19) => local7
[38:6..38:16) <= backends/graphviz/GraphvizCallGraph.toSubgraph().
[38:17..38:19) <= backends/graphviz/GraphvizCallGraph.toSubgraph().(ns)
[38:21..38:25) => models/Type#
[38:29..38:34) => guru/nidi/graphviz/model/Graph#
[38:36..38:39) => scala/Predef.Map#
[38:40..38:46) => models/Method#
[38:48..38:52) => guru/nidi/graphviz/model/Node#
[39:8..39:15) <= local9
[40:6..40:8) => backends/graphviz/GraphvizCallGraph.toSubgraph().(ns)
[40:9..40:16) => models/Type#methods.
[41:9..41:12) => scala/collection/immutable/List#map().
[41:13..41:14) <= local8
[41:18..41:19) => local8
[41:20..41:22) => scala/Predef.ArrowAssoc#`->`().
[41:23..41:29) => backends/graphviz/GraphvizCallGraph.toNode().
[41:30..41:31) => local8
[42:9..42:14) => scala/collection/IterableOnceOps#toMap().
[43:8..43:9) <= local10
[44:6..44:11) => guru/nidi/graphviz/model/Factory#graph(+1).
[44:12..44:14) => backends/graphviz/GraphvizCallGraph.toSubgraph().(ns)
[44:15..44:19) => models/Type#name.
[45:9..45:16) => guru/nidi/graphviz/model/Graph#cluster().
[46:9..46:18) => guru/nidi/graphviz/model/Graph#graphAttr().
[46:19..46:25) => guru/nidi/graphviz/attribute/Attributed#with(+6).
[46:26..46:31) => guru/nidi/graphviz/attribute/Label#
[46:32..46:34) => guru/nidi/graphviz/attribute/Label#of().
[46:35..46:37) => backends/graphviz/GraphvizCallGraph.toSubgraph().(ns)
[46:38..46:42) => models/Type#name.
[47:9..47:15) => guru/nidi/graphviz/model/Graph#with().
[47:16..47:23) => local9
[47:24..47:30) => scala/collection/MapOps#values().
[47:31..47:36) => scala/collection/IterableOnceOps#toSeq().
[48:5..48:6) => local10
[48:8..48:15) => local9
[51:14..51:20) <= backends/graphviz/GraphvizCallGraph.toNode().
[51:21..51:24) <= backends/graphviz/GraphvizCallGraph.toNode().(box)
[51:26..51:32) => models/Method#
[51:35..51:39) => guru/nidi/graphviz/model/Node#
[52:4..52:8) => guru/nidi/graphviz/model/Factory#node().
[52:9..52:12) => backends/graphviz/GraphvizCallGraph.toNode().(box)
[52:13..52:17) => models/Method#name.
[54:4..54:21) => backends/graphviz/GraphvizCallGraph.
[57:1..57:5) => scala/main#
[58:4..58:28) <= backends/graphviz/GraphvizCallGraph$package.graphVizCallGraphExample().
[58:30..58:34) => java/io/File#
[59:6..59:7) <= local11
[59:10..59:17) => backends/graphviz/GraphvizCallGraph.toGraph().
[59:40..59:57) => callGraph/CallGraphExamples.
[59:58..59:74) => callGraph/CallGraphExamples.callGraphExample.
[60:2..60:10) => guru/nidi/graphviz/engine/Graphviz#
[60:11..60:20) => guru/nidi/graphviz/engine/Graphviz#fromGraph().
[60:21..60:22) => local11
[60:24..60:30) => guru/nidi/graphviz/engine/Graphviz#height().
[60:36..60:42) => guru/nidi/graphviz/engine/Graphviz#render().
[60:43..60:49) => guru/nidi/graphviz/engine/Format#
[60:50..60:64) => guru/nidi/graphviz/engine/Format#SVG_STANDALONE.
[60:66..60:72) => guru/nidi/graphviz/engine/Renderer#toFile().
[60:77..60:81) => java/io/File#

Synthetics:
[21:6..22:12) => *[Tuple2[Graph, Map[Method, Node]]]
  Tuple2 => scala/Tuple2#
  Graph => guru/nidi/graphviz/model/Graph#
  Map => scala/collection/immutable/Map#
  Method => models/Method#
  Node => guru/nidi/graphviz/model/Node#
[21:6..23:14) => *[Graph, Map[Method, Node]]
  Graph => guru/nidi/graphviz/model/Graph#
  Map => scala/collection/immutable/Map#
  Method => models/Method#
  Node => guru/nidi/graphviz/model/Node#
[21:6..23:14) => *($conforms[Tuple2[Graph, Map[Method, Node]]])
  $conforms => scala/Predef.$conforms().
  Tuple2 => scala/Tuple2#
  Graph => guru/nidi/graphviz/model/Graph#
  Map => scala/collection/immutable/Map#
  Method => models/Method#
  Node => guru/nidi/graphviz/model/Node#
[26:6..26:20) => *[Map[Method, Node]]
  Map => scala/collection/immutable/Map#
  Method => models/Method#
  Node => guru/nidi/graphviz/model/Node#
[26:21..26:30) => *[Method, Node]
  Method => models/Method#
  Node => guru/nidi/graphviz/model/Node#
[26:32..26:36) => *[Node]
  Node => guru/nidi/graphviz/model/Node#
[40:6..41:12) => *[Tuple2[<?>, Node]]
  Tuple2 => scala/Tuple2#
  Node => guru/nidi/graphviz/model/Node#
[40:6..42:14) => *[<?>, Node]
  Node => guru/nidi/graphviz/model/Node#
[40:6..42:14) => *(refl[Tuple2[<?>, Node]])
  refl => scala/`<:<`.refl().
  Tuple2 => scala/Tuple2#
  Node => guru/nidi/graphviz/model/Node#
[41:18..41:19) => ArrowAssoc[<?>](*)
  ArrowAssoc => scala/Predef.ArrowAssoc().
[41:18..41:22) => *[Node]
  Node => guru/nidi/graphviz/model/Node#
